{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","value","onChange","target","type","placeholder","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68c6bcee.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className=\"btn\"\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  color: \"blue\",\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport Button from \"./Button\";\nconst Header = ({ title, onAdd, showAdd }) => {\n  return (\n    <div>\n      <header className=\"header\">\n        <h1>{title}</h1>\n\n        <Button\n          color={showAdd ? \"red\" : \"green\"}\n          text={showAdd ? \"Close\" : \"Add\"}\n          onClick={onAdd}\n        />\n      </header>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Task Tracker\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\n//CSS in JS\n// const headingStyle = {\n//   color: \"red\",\n//   backgroundColor: \"black\",\n// };\n\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\n      onDoubleClick={() => onToggle(task.id)}\n    >\n      <h3>\n        {task.text}{\" \"}\n        <FaTimes\n          onClick={() => onDelete(task.id)}\n          style={{ color: \"red\", cursor: \"pointer\" }}\n        />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          onDelete={onDelete}\n          onToggle={onToggle}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!text) {\n      alert(\"Please add a task)\");\n      return;\n    }\n    onAdd({ text, day, reminder });\n    setText(\"\");\n    setDay(\"\");\n    setReminder(false);\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          type=\"text\"\n          placeholder=\"Add Task\"\n        ></input>\n      </div>\n      <div className=\"form-control\">\n        <label>Day & Time</label>\n        <input\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n          type=\"text\"\n          placeholder=\"Day & Time\"\n        ></input>\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Reminder</label>\n        <input\n          checked={reminder}\n          type=\"checkbox\"\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        ></input>\n      </div>\n      <input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\"></input>\n    </form>\n  );\n};\n\nexport default AddTask;\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { useState } from \"react\";\nimport AddTask from \"./components/AddTask\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(true);\n\n  const [tasks, setTasks] = useState([\n    // {\n    //   id: 1,\n    //   text: \"Garbage\",\n    //   day: \"Feb 5th at 3:00pm\",\n    //   reminder: false,\n    // },\n    // {\n    //   id: 2,\n    //   text: \"shopping\",\n    //   day: \"Feb 8th at 3:00pm\",\n    //   reminder: false,\n    // },\n    // {\n    //   id: 3,\n    //   text: \"clean\",\n    //   day: \"Feb 6th at 3:00pm\",\n    //   reminder: true,\n    // },\n  ]);\n  //add task\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks to show\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}